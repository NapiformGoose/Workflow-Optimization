'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _actions = require('./actions');

var _constants = require('./constants');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function hashToHref(hash) {
  return hash.slice(1) || '/';
}

var Hash = function () {
  function Hash(store) {
    _classCallCheck(this, Hash);

    this.store = store;
  }

  _createClass(Hash, [{
    key: 'listen',
    value: function listen() {
      var _this = this;

      window.addEventListener('hashchange', function () {
        _this.onPopHref(hashToHref(window.location.hash));
      }, false);
    }
  }, {
    key: 'update',
    value: function update(action) {
      this.href = action.href;

      if (action.type === _constants.NAVIGATE) {
        this.pushHref(action.href);
      }
    }
  }, {
    key: 'pushHref',
    value: function pushHref(href) {
      window.location.hash = href;
    }
  }, {
    key: 'onPopHref',
    value: function onPopHref(href) {
      if (href !== this.href) {
        this.store.dispatch((0, _actions.replace)(href));
      }
    }
  }]);

  return Hash;
}();

exports.default = Hash;